name: Foodgram workflow

on: [push]

jobs:
  # tests:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.8.5

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8 pytest
  #       pip install -r requirements.txt

  #   - name: Lint with flake8
  #     run: flake8 .

  #   - name: Test with pytest
  #     run: pytest tests.py

  push_foodgram_image_to_docker_hub:
    name: Build and push Foodgram docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image_name: romanoxenuk/foodgram

  push_foodgram_nginx_image_to_docker_hub:
    name: Push Docker image NGINX to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: whoan/docker-build-with-cache-action@v5
        with:
          context: ./nginx
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image_name: romanoxenuk/foodgram-nginx

  deploy:
    runs-on: ubuntu-latest
    needs: [push_foodgram_image_to_docker_hub, push_foodgram_nginx_image_to_docker_hub]
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        # password: ${{ secrets.PASSWORD }}
        key: ${{ secrets.SSH_KEY }}
        debug: true
        # passphrase: ${{ secrets.PASSPHRASE }} # если ваш ssh-ключ защищен фразой-паролем
        # script: uname -a
        script: |
          cd foodgram-infra
          sudo docker-compose pull
          sudo docker-compose down
          sudo docker-compose up -d --build
          sudo docker-compose exec -T web python manage.py collectstatic --noinput
          sudo docker-compose exec -T web make run_migrations

